---
import { siteConfig } from '../config/siteconfig';

interface Props {
  webhook?: string;
  subjects?: string[];
}

const { 
  webhook = 'https://votre-webhook-par-defaut.com',
  subjects = ['Demande générale', 'Support technique', 'Partenariat', 'Autre']
} = Astro.props;
---

<div class="contact-form bg-main-color-light rounded-lg p-8 mt-12 mb-8">
  <h3 class="text-2xl font-semibold text-main-color mb-4">Contactez-nous</h3>
  <p class="text-gray-700 mb-6">Nous sommes là pour répondre à vos questions.</p>
  <form id="contact-form" class="space-y-4">
    <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
      <div>
        <label for="firstname" class="block text-sm font-medium text-gray-700 mb-1">Prénom</label>
        <input type="text" id="firstname" name="firstname" required class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-main-color">
      </div>
      <div>
        <label for="lastname" class="block text-sm font-medium text-gray-700 mb-1">Nom</label>
        <input type="text" id="lastname" name="lastname" required class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-main-color">
      </div>
    </div>
    <div>
      <label for="company" class="block text-sm font-medium text-gray-700 mb-1">Entreprise</label>
      <input type="text" id="company" name="company" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-main-color">
    </div>
    <div>
      <label for="phone" class="block text-sm font-medium text-gray-700 mb-1">Téléphone</label>
      <input type="tel" id="phone" name="phone" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-main-color">
    </div>
    <div>
      <label for="email" class="block text-sm font-medium text-gray-700 mb-1">Email</label>
      <input type="email" id="email" name="email" required class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-main-color">
    </div>
    <div>
      <label for="subject" class="block text-sm font-medium text-gray-700 mb-1">Votre sujet</label>
      <select id="subject" name="subject" required class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-main-color">
        {subjects.map((subject) => (
          <option value={subject}>{subject}</option>
        ))}
      </select>
    </div>
    <div>
      <label for="message" class="block text-sm font-medium text-gray-700 mb-1">Message</label>
      <textarea id="message" name="message" rows="4" required class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-main-color"></textarea>
    </div>
    <div class="flex items-start">
      <input type="checkbox" id="gdpr" name="gdpr" required class="mt-1 mr-2">
      <label for="gdpr" class="text-sm text-gray-700">J'accepte que mes données soient traitées dans le cadre de ma demande et j'ai lu la <a href="/privacy" class="text-main-color hover:underline">politique de confidentialité</a>.</label>
    </div>
    <button type="submit" class="w-full bg-main-color text-white font-bold py-2 px-4 rounded-lg hover:opacity-90 transition-opacity">Envoyer</button>
  </form>
</div>

<script define:vars={{ webhook }} is:inline>
  const form = document.getElementById('contact-form');
  form.addEventListener('submit', async (e) => {
    e.preventDefault();
    const formData = new FormData(form);
    const data = Object.fromEntries(formData);

    try {
      const response = await fetch(webhook, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(data),
      });

      if (response.ok) {
        alert('Merci pour votre message. Nous vous répondrons dans les plus brefs délais.');
        form.reset();
      } else {
        throw new Error('Erreur lors de l\'envoi du message');
      }
    } catch (error) {
      console.error('Erreur:', error);
      alert('Une erreur est survenue. Veuillez réessayer plus tard.');
    }
  });
</script>

<style define:vars={{ mainColor: siteConfig.mainColor }}>
  .bg-main-color-light {
    background-color: color-mix(in srgb, var(--mainColor) 5%, white);
  }
  .text-main-color {
    color: var(--mainColor);
  }
  .focus\:ring-main-color:focus {
    --tw-ring-color: var(--mainColor);
  }
  .bg-main-color {
    background-color: var(--mainColor);
  }
</style>
