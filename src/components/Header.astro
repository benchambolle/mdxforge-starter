---
import { headerLinks, headerCTA } from '../config/header-footer';
import { siteConfig } from '../config/siteconfig';
import BurgerMenu from './BurgerMenu.astro';
---

<header class="bg-white shadow-md">
  <div class="container mx-auto px-4 py-3 flex justify-between items-center">
    <a href="/" class="text-xl font-bold flex items-center">
      {siteConfig.logoPath ? (
        <img src={siteConfig.logoPath} alt={siteConfig.siteName} class="h-8 mr-2" />
      ) : (
        <span class="text-main-color">{siteConfig.siteName}</span>
      )}
    </a>
    <div class="hidden md:flex items-center space-x-6">
      <nav>
        <ul class="flex space-x-6">
          {headerLinks.map((item) => (
            <li class="relative group">
              {item.children ? (
                <div>
                  <button class="text-gray-600 hover:text-main-color transition duration-300 flex items-center peer">
                    {item.text}
                    <svg class="w-4 h-4 ml-1" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
                    </svg>
                  </button>
                  <ul class="absolute left-0 mt-2 w-48 bg-white rounded-md shadow-lg hidden peer-focus:block hover:block focus:block">
                    {item.children.map((subItem) => (
                      <li>
                        <a href={subItem.href} class="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 hover:text-main-color transition duration-300">{subItem.text}</a>
                      </li>
                    ))}
                  </ul>
                </div>
              ) : (
                <a href={item.href} class="text-gray-600 hover:text-main-color transition duration-300">{item.text}</a>
              )}
            </li>
          ))}
        </ul>
      </nav>
      <a href={headerCTA.href} class="bg-main-color text-white font-bold py-2 px-4 rounded-lg hover:opacity-90 transition-opacity">
        {headerCTA.text}
      </a>
    </div>
    <BurgerMenu />
  </div>
</header>

<style define:vars={{ mainColor: siteConfig.mainColor }}>
  .text-main-color {
    color: var(--mainColor);
  }
  .bg-main-color {
    background-color: var(--mainColor);
  }
</style>

<script>
  document.addEventListener('click', (event) => {
    const dropdowns = document.querySelectorAll('.peer-focus:block');
    dropdowns.forEach((dropdown) => {
      if (!dropdown.contains(event.target as Node)) {
        dropdown.classList.add('hidden');
      }
    });
  });

  const dropdownButtons = document.querySelectorAll('.peer');
  dropdownButtons.forEach((button) => {
    button.addEventListener('click', (event) => {
      event.stopPropagation();
      const dropdown = button.nextElementSibling;
      dropdown?.classList.toggle('hidden');
    });
  });
</script>
