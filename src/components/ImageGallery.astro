---

interface Image {
  src: string;
  alt: string;
  title?: string;
}

interface Props {
  images: Image[];
}

const { images } = Astro.props;
---

<div class="image-gallery">
  <div class="gallery-grid">
    {images.map((image, index) => (
      <div class="gallery-item">
        <img src={image.src} alt={image.alt} loading="lazy" data-index={index} />
      </div>
    ))}
  </div>

  <div id="lightbox" class="lightbox">
    <div class="lightbox-content">
      <span class="close">&times;</span>
      <img id="lightbox-img" src="" alt="" />
      <div class="caption"></div>
      <a class="prev">&#10094;</a>
      <a class="next">&#10095;</a>
    </div>
  </div>
</div>

<script define:vars={{ images }}>
  let currentIndex = 0;

  function openLightbox(index) {
    currentIndex = index;
    updateLightboxImage();
    document.getElementById('lightbox').style.display = 'flex';
    document.addEventListener('keydown', handleKeyPress);
  }

  function closeLightbox() {
    document.getElementById('lightbox').style.display = 'none';
    document.removeEventListener('keydown', handleKeyPress);
  }

  function changeImage(n) {
    currentIndex += n;
    if (currentIndex >= images.length) currentIndex = 0;
    if (currentIndex < 0) currentIndex = images.length - 1;
    updateLightboxImage();
  }

  function updateLightboxImage() {
    const img = document.getElementById('lightbox-img');
    img.src = images[currentIndex].src;
    img.alt = images[currentIndex].alt;
    document.querySelector('.caption').textContent = images[currentIndex].title || '';
  }

  function handleKeyPress(e) {
    if (e.key === 'Escape') {
      closeLightbox();
    } else if (e.key === 'ArrowLeft') {
      changeImage(-1);
    } else if (e.key === 'ArrowRight') {
      changeImage(1);
    }
  }

  // Ajout des écouteurs d'événements
  document.querySelector('.image-gallery').addEventListener('click', (e) => {
    if (e.target.tagName === 'IMG' && e.target.closest('.gallery-item')) {
      openLightbox(parseInt(e.target.dataset.index));
    }
  });

  document.querySelector('.close').addEventListener('click', closeLightbox);
  document.querySelector('.prev').addEventListener('click', () => changeImage(-1));
  document.querySelector('.next').addEventListener('click', () => changeImage(1));

  // Fermer le lightbox en cliquant à côté de l'image
  document.getElementById('lightbox').addEventListener('click', (e) => {
    if (e.target.id === 'lightbox') {
      closeLightbox();
    }
  });
</script>

<style>
  .image-gallery {
    width: 100%;
    max-width: 1200px;
    margin: 0 auto;
  }

  .gallery-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
    gap: 1rem;
  }

  .gallery-item {
    cursor: pointer;
    overflow: hidden;
    border-radius: 8px;
  }

  .gallery-item img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform 0.3s ease;
  }

  .gallery-item:hover img {
    transform: scale(1.05);
  }

  .lightbox {
    display: none;
    position: fixed;
    z-index: 1000;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.9);
    justify-content: center;
    align-items: center;
  }

  .lightbox-content {
    position: relative;
    max-width: 90%;
    max-height: 90%;
  }

  .lightbox img {
    max-width: 100%;
    max-height: 100%;
    object-fit: contain;
  }

  .close {
    color: white;
    position: absolute;
    top: -40px;
    right: 0;
    font-size: 35px;
    cursor: pointer;
  }

  .prev, .next {
    cursor: pointer;
    position: absolute;
    top: 50%;
    width: auto;
    padding: 16px;
    margin-top: -50px;
    color: white;
    font-weight: bold;
    font-size: 20px;
    transition: 0.6s ease;
    user-select: none;
    background-color: rgba(0, 0, 0, 0.8);
    border-radius: 50%;
  }

  .next {
    right: -60px;
  }

  .prev {
    left: -60px;
  }

  .caption {
    text-align: center;
    color: #ccc;
    padding: 10px 0;
    width: 100%;
    position: absolute;
    bottom: -40px;
  }
</style>
