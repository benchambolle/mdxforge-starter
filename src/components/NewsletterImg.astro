---
import { siteConfig } from '../config/siteconfig';

interface Props {
  webhook?: string;
  image: string;
  alt: string;
  redirectUrl?: string;
}

const { webhook = 'https://votre-webhook-par-defaut.com', image, alt, redirectUrl } = Astro.props;
---

<div class="newsletter-img-card bg-main-color-light rounded-lg p-8 mt-12 mb-8 flex flex-col md:flex-row items-center md:items-center">
  <div class="md:w-1/3 flex justify-center md:justify-start">
    <img src={image} alt={alt} class="w-96 h-96 object-cover rounded-lg mb-4 md:mb-0" />
  </div>
  <div class="md:w-2/3 md:pl-8 flex flex-col justify-center">
    <h3 class="text-2xl font-semibold text-main-color mb-4">Abonnez-vous à notre newsletter</h3>
    <p class="text-gray-700 mb-6">Restez informé de nos dernières actualités et articles.</p>
    <form id="newsletter-img-form" class="space-y-4">
      <div>
        <input type="text" id="firstname" name="firstname" placeholder="Prénom" required class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-main-color">
      </div>
      <div>
        <input type="email" id="email" name="email" placeholder="Email" required class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-main-color">
      </div>
      <div class="flex items-start">
        <input type="checkbox" id="gdpr" name="gdpr" required class="mt-1 mr-2">
        <label for="gdpr" class="text-sm text-gray-700">J'accepte de recevoir des emails et je reconnais avoir lu la <a href="/privacy" class="text-main-color hover:underline">politique de confidentialité</a>.</label>
      </div>
      <button type="submit" class="w-full bg-main-color text-white font-bold py-2 px-4 rounded-lg hover:opacity-90 transition-opacity">S'abonner</button>
    </form>
  </div>
</div>

<script define:vars={{ webhook, redirectUrl }} is:inline>
  const form = document.getElementById('newsletter-img-form');
  form.addEventListener('submit', async (e) => {
    e.preventDefault();
    const formData = new FormData(form);
    const data = Object.fromEntries(formData);

    try {
      const response = await fetch(webhook, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(data),
      });

      if (response.ok) {
        if (redirectUrl) {
          window.location.href = redirectUrl;
        } else {
          alert('Merci pour votre inscription !');
          form.reset();
        }
      } else {
        throw new Error('Erreur lors de l\'inscription');
      }
    } catch (error) {
      console.error('Erreur:', error);
      alert('Une erreur est survenue. Veuillez réessayer plus tard.');
    }
  });
</script>

<style define:vars={{ mainColor: siteConfig.mainColor }}>
  .bg-main-color-light {
    background-color: color-mix(in srgb, var(--mainColor) 5%, white);
  }
  .text-main-color {
    color: var(--mainColor);
  }
  .focus\:ring-main-color:focus {
    --tw-ring-color: var(--mainColor);
  }
  .bg-main-color {
    background-color: var(--mainColor);
  }
</style>
